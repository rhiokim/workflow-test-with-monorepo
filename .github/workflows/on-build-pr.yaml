name: On Build PR

run-name: Build PR #${{ inputs.issue }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      issue:
        description: 'pull request issue number'
        required: true
      environment:
        description: 'deploy environment'
        required: true
      package:
        description: 'package'
        required: true
      action:
        description: 'action'
        required: false

jobs:
  deploy:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Print Inputs
        run: |
          echo "issue number: ${{ inputs.issue }}"
          echo "environment: ${{ inputs.environment }}"
          echo "package: ${{ inputs.package }}"
          echo "action: ${{ inputs.action }}"

      - uses: actions/setup-node@v3.5.1
        with:
          registry-url: 'https://npm.pkg.github.com'
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Authenticate with private NPM package
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.PAT }}" > ~/.npmrc

      - name: Monorepo boostrap
        run: |
          npm install ci

      - name: Lint & Test & Build
        run: |
          npm run lint -w ${{ inputs.package }}
          npm run build -w ${{ inputs.package }}
