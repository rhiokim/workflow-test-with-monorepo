# https://docs.github.com/en/rest/reactions#create-reaction-for-an-issue-comment
# https://octokit.github.io/rest.js/v19#reactions
# https://github.com/actions/github-script

name: On Issue Comment

run-name: Run command from comment /w PR `${{ github.event.issue.title }}` by @${{ github.actor }}

on:
  issue_comment:
    types:
      - 'created'

jobs:
  ci-cd-comment:
    if: ${{ github.event.issue.state == 'open' && github.event.issue.pull_request && startsWith(github.event.comment.body, '/') }}
    name: Parse comment
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16]
        os: [ubuntu-latest]

    steps:
      - uses: rhiokim/split-by@master
        id: comment
        with:
          string: ${{ github.event.comment.body }}
          split-by: ' '


      - name: Build ${{ steps.comment.outputs._1 }}
        if: steps.comment.outputs._0 == '/build'
        run: |
          echo ${{ steps.comment.outputs._0 }}
          echo ${{ steps.comment.outputs._1 }}
          echo ${{ steps.comment.outputs._2 }}

      # - name: Get PR SHA
      #   id: sha
      #   uses: actions/github-script@v6
      #   with:
      #     result-encoding: string
      #     script: |
      #       const { owner, repo, number } = context.issue;
      #       const pr = await github.rest.pulls.get({
      #         owner,
      #         repo,
      #         pull_number: number,
      #       });

      #       return pr.data.head.sha

      - name: Get PR Ref
        id: get-pr-ref
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: number,
            });

            return pr.data.head.ref


      # https://docs.github.com/en/rest/reactions#create-reaction-for-an-issue-comment
      - name: Reaction
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.issue;
            const reaction = await github.rest.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: ${{ github.event.comment.id }},
              content: 'rocket',
            })

      - name: Trigger Build Workflow
        if: steps.comment.outputs._0 == '/build'
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo, number } = context.issue;
            await github.rest.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id: 'on-build-pr.yaml',
              ref: '${{ steps.get-pr-ref.outputs.result }}',
              inputs: {
                issue: String(number),
                environment: '${{ steps.comment.outputs._1 }}',
                package: '${{ steps.comment.outputs._2 }}',
                action: 'build',
              }
            })

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: 'Checkout issue branch'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: hub pr checkout ${{ github.event.issue.number }}

      - name: Create release tag
        if: steps.comment.outputs._0 == '/release'
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          git tag -a "release/${{ steps.comment.outputs._1 }}/${{ steps.comment.outputs._2 }}" -m "Release ${{ steps.comment.outputs._2 }} to ${{ steps.comment.outputs._1 }} #${number}"
          git push --tags --force
          # git push origin "release/${{ steps.comment.outputs._1 }}/${{ steps.comment.outputs._2 }}" --force

      # https://github.blog/changelog/2022-09-08-github-actions-use-github_token-with-workflow_dispatch-and-repository_dispatch/
      # https://docs.github.com/en/rest/actions/workflows#create-a-workflow-dispatch-event
      # https://docs.github.com/en/rest/pulls/pulls
      - name: Trigger Deploy Workflow
        if: steps.comment.outputs._0 == '/deploy'
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo, number } = context.issue;
            await github.rest.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id: 'on-deploy-pr.yaml',
              ref: '${{ steps.get-pr-ref.outputs.result }}',
              inputs: {
                issue: String(number),
                environment: '${{ steps.comment.outputs._1 }}',
                package: '${{ steps.comment.outputs._2 }}',
                action: 'deploy',
              }
            })
